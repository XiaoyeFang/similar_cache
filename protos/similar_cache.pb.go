// Code generated by protoc-gen-go. DO NOT EDIT.
// source: similar_cache.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SimilarRequest struct {
	// namePackage 包名
	NamePackage string `protobuf:"bytes,1,opt,name=namePackage,proto3" json:"namePackage,omitempty"`
	// skip 跳过数量
	Skip int32 `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`
	// limit 限定数量
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// disable 禁用的包名
	Disable string `protobuf:"bytes,4,opt,name=disable,proto3" json:"disable,omitempty"`
	// enableGoogleAdsense 是否禁用谷歌广告
	EnableGoogleAdsense string `protobuf:"bytes,5,opt,name=enableGoogleAdsense,proto3" json:"enableGoogleAdsense,omitempty"`
	// ne_package_name 要排除的包名
	NePackageName string `protobuf:"bytes,6,opt,name=nePackageName,proto3" json:"nePackageName,omitempty"`
	// notNexting 是否有下一页
	NotNexting           bool     `protobuf:"varint,7,opt,name=notNexting,proto3" json:"notNexting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimilarRequest) Reset()         { *m = SimilarRequest{} }
func (m *SimilarRequest) String() string { return proto.CompactTextString(m) }
func (*SimilarRequest) ProtoMessage()    {}
func (*SimilarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_similar_cache_c29b6fbfe78658ad, []int{0}
}
func (m *SimilarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimilarRequest.Unmarshal(m, b)
}
func (m *SimilarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimilarRequest.Marshal(b, m, deterministic)
}
func (dst *SimilarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimilarRequest.Merge(dst, src)
}
func (m *SimilarRequest) XXX_Size() int {
	return xxx_messageInfo_SimilarRequest.Size(m)
}
func (m *SimilarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SimilarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SimilarRequest proto.InternalMessageInfo

func (m *SimilarRequest) GetNamePackage() string {
	if m != nil {
		return m.NamePackage
	}
	return ""
}

func (m *SimilarRequest) GetSkip() int32 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *SimilarRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SimilarRequest) GetDisable() string {
	if m != nil {
		return m.Disable
	}
	return ""
}

func (m *SimilarRequest) GetEnableGoogleAdsense() string {
	if m != nil {
		return m.EnableGoogleAdsense
	}
	return ""
}

func (m *SimilarRequest) GetNePackageName() string {
	if m != nil {
		return m.NePackageName
	}
	return ""
}

func (m *SimilarRequest) GetNotNexting() bool {
	if m != nil {
		return m.NotNexting
	}
	return false
}

type DeveloperRequest struct {
	// developer_id 开发者id
	DeveloperId string `protobuf:"bytes,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
	// skip 跳过数量
	Skip int32 `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`
	// limit 限定数量
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// disable 禁用的包名
	Disable string `protobuf:"bytes,4,opt,name=disable,proto3" json:"disable,omitempty"`
	// enableGoogleAdsense 是否禁用谷歌广告
	EnableGoogleAdsense string `protobuf:"bytes,5,opt,name=enableGoogleAdsense,proto3" json:"enableGoogleAdsense,omitempty"`
	// ne_package_name 要排除的包名
	NePackageName string `protobuf:"bytes,6,opt,name=nePackageName,proto3" json:"nePackageName,omitempty"`
	// notNexting 是否有下一页
	NotNexting           bool     `protobuf:"varint,7,opt,name=notNexting,proto3" json:"notNexting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeveloperRequest) Reset()         { *m = DeveloperRequest{} }
func (m *DeveloperRequest) String() string { return proto.CompactTextString(m) }
func (*DeveloperRequest) ProtoMessage()    {}
func (*DeveloperRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_similar_cache_c29b6fbfe78658ad, []int{1}
}
func (m *DeveloperRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeveloperRequest.Unmarshal(m, b)
}
func (m *DeveloperRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeveloperRequest.Marshal(b, m, deterministic)
}
func (dst *DeveloperRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeveloperRequest.Merge(dst, src)
}
func (m *DeveloperRequest) XXX_Size() int {
	return xxx_messageInfo_DeveloperRequest.Size(m)
}
func (m *DeveloperRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeveloperRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeveloperRequest proto.InternalMessageInfo

func (m *DeveloperRequest) GetDeveloperId() string {
	if m != nil {
		return m.DeveloperId
	}
	return ""
}

func (m *DeveloperRequest) GetSkip() int32 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *DeveloperRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DeveloperRequest) GetDisable() string {
	if m != nil {
		return m.Disable
	}
	return ""
}

func (m *DeveloperRequest) GetEnableGoogleAdsense() string {
	if m != nil {
		return m.EnableGoogleAdsense
	}
	return ""
}

func (m *DeveloperRequest) GetNePackageName() string {
	if m != nil {
		return m.NePackageName
	}
	return ""
}

func (m *DeveloperRequest) GetNotNexting() bool {
	if m != nil {
		return m.NotNexting
	}
	return false
}

type SimDevRequest struct {
	// namePackage 包名
	NamePackage string `protobuf:"bytes,1,opt,name=namePackage,proto3" json:"namePackage,omitempty"`
	// developer_id 开发者id
	DeveloperId string `protobuf:"bytes,2,opt,name=developerId,proto3" json:"developerId,omitempty"`
	// skip Similar跳过数量
	Skip1 int32 `protobuf:"varint,3,opt,name=skip1,proto3" json:"skip1,omitempty"`
	// limit Similar限定数量
	Limit1 int32 `protobuf:"varint,4,opt,name=limit1,proto3" json:"limit1,omitempty"`
	// disable Similar禁用的包名
	Disable1 string `protobuf:"bytes,5,opt,name=disable1,proto3" json:"disable1,omitempty"`
	// enableGoogleAdsense Similar是否禁用谷歌广告
	EnableGoogleAdsense1 string `protobuf:"bytes,6,opt,name=enableGoogleAdsense1,proto3" json:"enableGoogleAdsense1,omitempty"`
	// ne_package_name Similar要排除的包名
	NePackageName1 string `protobuf:"bytes,7,opt,name=nePackageName1,proto3" json:"nePackageName1,omitempty"`
	// notNexting Similar是否有下一页
	NotNexting1 bool `protobuf:"varint,8,opt,name=notNexting1,proto3" json:"notNexting1,omitempty"`
	// skip Developer跳过数量
	Skip2 int32 `protobuf:"varint,9,opt,name=skip2,proto3" json:"skip2,omitempty"`
	// limit Developer限定数量
	Limit2 int32 `protobuf:"varint,10,opt,name=limit2,proto3" json:"limit2,omitempty"`
	// disable Developer禁用的包名
	Disable2 string `protobuf:"bytes,11,opt,name=disable2,proto3" json:"disable2,omitempty"`
	// enableGoogleAdsense Developer是否禁用谷歌广告
	EnableGoogleAdsense2 string `protobuf:"bytes,12,opt,name=enableGoogleAdsense2,proto3" json:"enableGoogleAdsense2,omitempty"`
	// ne_package_name Developer要排除的包名
	NePackageName2 string `protobuf:"bytes,13,opt,name=nePackageName2,proto3" json:"nePackageName2,omitempty"`
	// notNexting Developer是否有下一页
	NotNexting2          bool     `protobuf:"varint,14,opt,name=notNexting2,proto3" json:"notNexting2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimDevRequest) Reset()         { *m = SimDevRequest{} }
func (m *SimDevRequest) String() string { return proto.CompactTextString(m) }
func (*SimDevRequest) ProtoMessage()    {}
func (*SimDevRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_similar_cache_c29b6fbfe78658ad, []int{2}
}
func (m *SimDevRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimDevRequest.Unmarshal(m, b)
}
func (m *SimDevRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimDevRequest.Marshal(b, m, deterministic)
}
func (dst *SimDevRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimDevRequest.Merge(dst, src)
}
func (m *SimDevRequest) XXX_Size() int {
	return xxx_messageInfo_SimDevRequest.Size(m)
}
func (m *SimDevRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SimDevRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SimDevRequest proto.InternalMessageInfo

func (m *SimDevRequest) GetNamePackage() string {
	if m != nil {
		return m.NamePackage
	}
	return ""
}

func (m *SimDevRequest) GetDeveloperId() string {
	if m != nil {
		return m.DeveloperId
	}
	return ""
}

func (m *SimDevRequest) GetSkip1() int32 {
	if m != nil {
		return m.Skip1
	}
	return 0
}

func (m *SimDevRequest) GetLimit1() int32 {
	if m != nil {
		return m.Limit1
	}
	return 0
}

func (m *SimDevRequest) GetDisable1() string {
	if m != nil {
		return m.Disable1
	}
	return ""
}

func (m *SimDevRequest) GetEnableGoogleAdsense1() string {
	if m != nil {
		return m.EnableGoogleAdsense1
	}
	return ""
}

func (m *SimDevRequest) GetNePackageName1() string {
	if m != nil {
		return m.NePackageName1
	}
	return ""
}

func (m *SimDevRequest) GetNotNexting1() bool {
	if m != nil {
		return m.NotNexting1
	}
	return false
}

func (m *SimDevRequest) GetSkip2() int32 {
	if m != nil {
		return m.Skip2
	}
	return 0
}

func (m *SimDevRequest) GetLimit2() int32 {
	if m != nil {
		return m.Limit2
	}
	return 0
}

func (m *SimDevRequest) GetDisable2() string {
	if m != nil {
		return m.Disable2
	}
	return ""
}

func (m *SimDevRequest) GetEnableGoogleAdsense2() string {
	if m != nil {
		return m.EnableGoogleAdsense2
	}
	return ""
}

func (m *SimDevRequest) GetNePackageName2() string {
	if m != nil {
		return m.NePackageName2
	}
	return ""
}

func (m *SimDevRequest) GetNotNexting2() bool {
	if m != nil {
		return m.NotNexting2
	}
	return false
}

type GeneralReply struct {
	Reply                string   `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralReply) Reset()         { *m = GeneralReply{} }
func (m *GeneralReply) String() string { return proto.CompactTextString(m) }
func (*GeneralReply) ProtoMessage()    {}
func (*GeneralReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_similar_cache_c29b6fbfe78658ad, []int{3}
}
func (m *GeneralReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralReply.Unmarshal(m, b)
}
func (m *GeneralReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralReply.Marshal(b, m, deterministic)
}
func (dst *GeneralReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralReply.Merge(dst, src)
}
func (m *GeneralReply) XXX_Size() int {
	return xxx_messageInfo_GeneralReply.Size(m)
}
func (m *GeneralReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralReply.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralReply proto.InternalMessageInfo

func (m *GeneralReply) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

func init() {
	proto.RegisterType((*SimilarRequest)(nil), "protos.SimilarRequest")
	proto.RegisterType((*DeveloperRequest)(nil), "protos.DeveloperRequest")
	proto.RegisterType((*SimDevRequest)(nil), "protos.SimDevRequest")
	proto.RegisterType((*GeneralReply)(nil), "protos.GeneralReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FragMentServiceClient is the client API for FragMentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FragMentServiceClient interface {
	// 查询Similar
	QuerySimilar(ctx context.Context, in *SimilarRequest, opts ...grpc.CallOption) (*GeneralReply, error)
	// 查询Developer
	QueryDeveloper(ctx context.Context, in *DeveloperRequest, opts ...grpc.CallOption) (*GeneralReply, error)
	// 查询similar_developer
	QuerySimAndDev(ctx context.Context, in *SimDevRequest, opts ...grpc.CallOption) (*GeneralReply, error)
}

type fragMentServiceClient struct {
	cc *grpc.ClientConn
}

func NewFragMentServiceClient(cc *grpc.ClientConn) FragMentServiceClient {
	return &fragMentServiceClient{cc}
}

func (c *fragMentServiceClient) QuerySimilar(ctx context.Context, in *SimilarRequest, opts ...grpc.CallOption) (*GeneralReply, error) {
	out := new(GeneralReply)
	err := c.cc.Invoke(ctx, "/protos.FragMentService/QuerySimilar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fragMentServiceClient) QueryDeveloper(ctx context.Context, in *DeveloperRequest, opts ...grpc.CallOption) (*GeneralReply, error) {
	out := new(GeneralReply)
	err := c.cc.Invoke(ctx, "/protos.FragMentService/QueryDeveloper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fragMentServiceClient) QuerySimAndDev(ctx context.Context, in *SimDevRequest, opts ...grpc.CallOption) (*GeneralReply, error) {
	out := new(GeneralReply)
	err := c.cc.Invoke(ctx, "/protos.FragMentService/QuerySimAndDev", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FragMentServiceServer is the server API for FragMentService service.
type FragMentServiceServer interface {
	// 查询Similar
	QuerySimilar(context.Context, *SimilarRequest) (*GeneralReply, error)
	// 查询Developer
	QueryDeveloper(context.Context, *DeveloperRequest) (*GeneralReply, error)
	// 查询similar_developer
	QuerySimAndDev(context.Context, *SimDevRequest) (*GeneralReply, error)
}

func RegisterFragMentServiceServer(s *grpc.Server, srv FragMentServiceServer) {
	s.RegisterService(&_FragMentService_serviceDesc, srv)
}

func _FragMentService_QuerySimilar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimilarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FragMentServiceServer).QuerySimilar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.FragMentService/QuerySimilar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FragMentServiceServer).QuerySimilar(ctx, req.(*SimilarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FragMentService_QueryDeveloper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeveloperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FragMentServiceServer).QueryDeveloper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.FragMentService/QueryDeveloper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FragMentServiceServer).QueryDeveloper(ctx, req.(*DeveloperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FragMentService_QuerySimAndDev_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimDevRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FragMentServiceServer).QuerySimAndDev(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.FragMentService/QuerySimAndDev",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FragMentServiceServer).QuerySimAndDev(ctx, req.(*SimDevRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FragMentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.FragMentService",
	HandlerType: (*FragMentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QuerySimilar",
			Handler:    _FragMentService_QuerySimilar_Handler,
		},
		{
			MethodName: "QueryDeveloper",
			Handler:    _FragMentService_QueryDeveloper_Handler,
		},
		{
			MethodName: "QuerySimAndDev",
			Handler:    _FragMentService_QuerySimAndDev_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "similar_cache.proto",
}

func init() { proto.RegisterFile("similar_cache.proto", fileDescriptor_similar_cache_c29b6fbfe78658ad) }

var fileDescriptor_similar_cache_c29b6fbfe78658ad = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0xc9, 0xb6, 0x74, 0xed, 0x59, 0x5b, 0xd0, 0x59, 0x99, 0x8e, 0x76, 0x81, 0xaa, 0x6a,
	0x42, 0xbd, 0x9a, 0x88, 0xb9, 0x07, 0x0d, 0x55, 0x4c, 0x5c, 0x30, 0x41, 0xfa, 0x00, 0xc8, 0x6b,
	0x8e, 0x8a, 0xb5, 0xc4, 0x29, 0x71, 0x56, 0xb1, 0x17, 0xe5, 0x05, 0xb8, 0x47, 0x3c, 0x02, 0xaa,
	0x13, 0x77, 0x4e, 0xff, 0x48, 0xdc, 0xee, 0x2a, 0xfe, 0x3e, 0x3b, 0x27, 0xfe, 0x7d, 0x8e, 0x0f,
	0x9c, 0x1a, 0x95, 0xa9, 0x54, 0x16, 0xdf, 0x66, 0x72, 0xf6, 0x9d, 0x2f, 0x17, 0x45, 0x5e, 0xe6,
	0xd8, 0xb2, 0x0f, 0x33, 0xfa, 0x13, 0x40, 0x7f, 0x5a, 0xcd, 0xc7, 0xfc, 0xe3, 0x9e, 0x4d, 0x89,
	0x43, 0x38, 0xd1, 0x32, 0xe3, 0x2f, 0x72, 0x76, 0x27, 0xe7, 0x4c, 0xc1, 0x30, 0x18, 0x77, 0x62,
	0xdf, 0x42, 0x84, 0x23, 0x73, 0xa7, 0x16, 0x74, 0x30, 0x0c, 0xc6, 0x61, 0x6c, 0xc7, 0x38, 0x80,
	0x30, 0x55, 0x99, 0x2a, 0xe9, 0xd0, 0x9a, 0x95, 0x40, 0x82, 0xe3, 0x44, 0x19, 0x79, 0x9b, 0x32,
	0x1d, 0xd9, 0x3a, 0x4e, 0xe2, 0x1b, 0x38, 0x65, 0xbd, 0x1a, 0x5d, 0xe7, 0xf9, 0x3c, 0xe5, 0xab,
	0xc4, 0xb0, 0x36, 0x4c, 0xa1, 0x5d, 0xb5, 0x6b, 0x0a, 0x2f, 0xa0, 0xa7, 0xdd, 0x16, 0x6e, 0x64,
	0xc6, 0xd4, 0xb2, 0x6b, 0x9b, 0x26, 0xbe, 0x02, 0xd0, 0x79, 0x79, 0xc3, 0x3f, 0x4b, 0xa5, 0xe7,
	0x74, 0x3c, 0x0c, 0xc6, 0xed, 0xd8, 0x73, 0x46, 0x7f, 0x03, 0x78, 0x31, 0xe1, 0x25, 0xa7, 0xf9,
	0x82, 0x7d, 0xe4, 0xc4, 0x79, 0x9f, 0x12, 0x87, 0xec, 0x59, 0x4f, 0x1a, 0xf9, 0xf7, 0x21, 0xf4,
	0xa6, 0x2a, 0x9b, 0xf0, 0xf2, 0xff, 0x8f, 0x78, 0x23, 0x91, 0x83, 0xed, 0x44, 0x06, 0x10, 0xae,
	0x52, 0x88, 0x1c, 0xbd, 0x15, 0x78, 0x06, 0x2d, 0x1b, 0x43, 0x64, 0xe1, 0xc3, 0xb8, 0x56, 0x78,
	0x0e, 0xed, 0x3a, 0x86, 0xa8, 0x06, 0x5e, 0x6b, 0x14, 0x30, 0xd8, 0x01, 0x1f, 0xd5, 0xb0, 0x3b,
	0xe7, 0xf0, 0x35, 0xf4, 0x1b, 0x21, 0x44, 0x96, 0xbb, 0x13, 0x6f, 0xb8, 0x96, 0x74, 0x9d, 0x44,
	0x44, 0x6d, 0x1b, 0x8e, 0x6f, 0x39, 0x0e, 0x41, 0x9d, 0x47, 0x0e, 0xb1, 0xe6, 0x10, 0x04, 0x1e,
	0x87, 0xf0, 0x38, 0x04, 0x9d, 0x34, 0x38, 0xc4, 0x1e, 0x0e, 0x41, 0xdd, 0xbd, 0x1c, 0x62, 0x8b,
	0x43, 0x50, 0x6f, 0x07, 0x87, 0x68, 0x72, 0x08, 0xea, 0x6f, 0x72, 0x88, 0xd1, 0x05, 0x74, 0xaf,
	0x59, 0x73, 0x21, 0xd3, 0x98, 0x17, 0xe9, 0xc3, 0x8a, 0xab, 0x58, 0x0d, 0xea, 0xd3, 0xad, 0x84,
	0xf8, 0x15, 0xc0, 0xf3, 0x8f, 0x85, 0x9c, 0x7f, 0x66, 0x5d, 0x4e, 0xb9, 0x58, 0xaa, 0x19, 0xe3,
	0x3b, 0xe8, 0x7e, 0xbd, 0xe7, 0xe2, 0xa1, 0xee, 0x03, 0x78, 0x56, 0xf5, 0x08, 0x73, 0xd9, 0x6c,
	0x0c, 0xe7, 0x03, 0xe7, 0xfb, 0xdf, 0x19, 0x3d, 0xc3, 0x0f, 0xd0, 0xb7, 0xef, 0xaf, 0xaf, 0x15,
	0x92, 0x5b, 0xb9, 0x79, 0xd3, 0xf6, 0xd6, 0x78, 0x5f, 0xd7, 0x98, 0xaa, 0xec, 0x4a, 0x27, 0x13,
	0x5e, 0xe2, 0x4b, 0x6f, 0x17, 0x8f, 0xbf, 0xee, 0xbe, 0x02, 0xb7, 0x55, 0x43, 0x7b, 0xfb, 0x2f,
	0x00, 0x00, 0xff, 0xff, 0x2a, 0x59, 0x32, 0x1d, 0xee, 0x04, 0x00, 0x00,
}
